1. Configuration of Certification Authority and Implementation of Transport
1. Preparing the environment
→Moving to the root using
---------------------------
sudo -i

→Creating directory:
--------------------
mkdir -p ca/{root-ca,sub-ca,server}/{private,certs,newcerts,crl,csr}

→Changing the root of ca and sub ca private folder
---------------------------------------------------
chmod -v 700 ca/{root-ca,sub-ca,server}/private

→Creating file index in both root ca and sub ca
------------------------------------------------
touch ca/{root-ca,sub-ca}/index

→Generating hexadecimal random number of 16 charecter
----------------------------------------------------
openssl rand -hex 16

→writing serial number of root ca
----------------------------------
openssl rand -hex 16 > ca/root-ca/serial

→writing serial number of sub ca
-------------------------------
openssl rand -hex 16 > ca/sub-ca/serial

→moving to ca directory
----------------------
cd ca


2. Generating private key for root ca, sub ca and server
→Public key for rootCA
----------------------
openssl genrsa -aes256 -out root-ca/private/ca.key 4096

→Public key for subCA
---------------------
openssl genrsa -aes256 -out sub-ca/private/sub-ca.key 4096

→Public key for server
----------------------
openssl genrsa -out server/private/server.key 2048


3. Generating certificates
Root-CA, 
→Creating root ca.config
--------------------------
gedit root-ca/root-ca.conf

→Moving inside root-ca
-----------------------
cd root-ca

→Generating root ca certificate
--------------------------------
openssl req -config root-ca.conf -key private/ca.key -new -x509 -days 7305 -sha256 -extensions v3_ca -out certs/ca.crt

→Ensuring that the certificate has been created properly
--------------------------------------------------------
openssl x509 -noout -in certs/ca.crt -text
 

→Moving a step back and then to sub-ca
-------------------------------------
cd ../sub-ca


Sub-CA
→Creating sub-ca.config
------------------------
gedit sub-ca.conf

→Requesting for sub ca certificate signing request.
--------------------------------------------------
openssl req -config sub-ca.conf -new -key private/sub-ca.key -sha256 -out csr/sub-ca.csr

→moving to the previous folder
----------------------------
cd -

→Signing the request of sub ca by root ca
-----------------------------------------
openssl ca -config root-ca.conf -extensions v3_intermediate_ca -days 3652 -notext -in ../sub-ca/csr/sub-ca.csr -out ../sub-ca/certs/sub-ca.crt

to confirm insert “y”


→.pem file has been generated, See the signing
--------------------
cat index

→Root ca signed sub ca, Seeing detail
--------------------------
openssl x509 -noout -text -in ../sub-ca/certs/sub-ca.crt
 


4. Configuring server
→Moving to server
---------------------
cd ../server

→Generating certificate signing request from server
--------------------------------------------------
openssl req -key private/server.key -new -sha256 -out csr/server.csr

→moving to sub ca to sign the server’s certificate
------------------------------------------------------
cd ../sub-ca

→Sub ca signing certificate request of server
--------------------------------------------------
openssl ca -config sub-ca.conf -extensions server_cert -days 365 -notext -in ../server/csr/server.csr -out ../server/certs/server.crt

 

→seeing detail
--------------
cat index

→moving to certs folder to see certificate of server
--------------------------------------------------
cd ../server/certs/

→See the directory by using command:
--------------------------------------
ls

→Now, concating sub-ca.crt, ca.crt and server.crt and naming the new file chained.crt
-----------------------------------------------------------------------------
cat server.crt ../../sub-ca/certs/sub-ca.crt ../../root-ca/certs/ca.crt > chained.crt

→moving back to server directory
--------------------------------
cd ..
echo "127.0.0.2 www. safemyturn.com" >> /etc/hosts
ping www. safemyturn.com
 

→Turning on the ssl port
---------------------------
openssl s_server -accept 443 -www -key private/server.key -cert certs/server.crt -CAfile ../sub-ca/certs/sub-ca.crt

→Opening new terminal
--------------
sudo -i

→See the port number used by different Ip addresses
------------------------------------------------
ss -ntl
sudo apt update
sudo apt install curl

→copying the certificate to ca certificate folder
-------------------------------------------------
cp ca/root-ca/certs/ca.crt /usr/local/share/ca-certificates/

→Updating ca certificate folder
--------------------------------
update-ca-certificates -v

→Open new terminal
-----------------------
sudo -i
tree ca

→Copy .pem files to home for future use
--------------------------------------
cp /root/ca/root-ca/newcerts/21DE5190AF587104493F1750892E9B86.pem ~server/
cp /root/ca/sub-ca/newcerts/ACB9E41C001BD6E31714199EF459CA4C.pem ~server/

→Copy .crt files to certificate folder in home for future use
--------------------------------------
cp /root/ca/root-ca/certs/ca.crt /home/server/certificate
cp /root/ca/sub-ca/certs/sub-ca.crt /home/server/certificate/
cp /root/ca/server/certs/chained.crt /home/server/certificate/
cp /root/ca/server/certs/server.crt /home/server/certificate/
cp /root/ca/server/private/server.key /home/server/certificate/

→Next go to this location using new terminal 
--------------------------------------------
sudo -i
cd /opt/lampp/etc/extra
chmod 777 httpd-ssl.conf 
gedit httpd-ssl.conf

→In line 106 replace this line
------------------------------------
SSLCertificateFile "/home/server/certificate/server.crt"

→In line 116 replace this line
----------------------------------------
SSLCertificateKeyFile "/home/server/certificate/server.key"

→In line 136 replace this line
--------------------------------------
SSLCACertificatePath "/home/server/certificate"

→For auto redirect to https place this after line 98
---------------------------
<VirtualHost _default_:80>
ServerName www.example.com:80
ServerAdmin you@example.com
Redirect permanent / https://www.safemyturn.com
</VirtualHost>


→Remove all file from htdocs
------------------------------------------
sudo -i
cd /opt/lampp/htdocs
ls
rm -r dashboard img webalizer
rm applications.html  bitnami.css index.php

→Now make a html file and write some html code
------------------------------------------
touch index.html
gedit index.html

save and exit

Now on the browser
Settings → privacy and security → view certificate → authorities → import → select the file
→open → select purpose → {view: to see the certificate} → OK

